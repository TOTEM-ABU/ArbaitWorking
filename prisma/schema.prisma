generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleStatus {
  ADMIN
  USER_FIZ
  USER_YUR
  SUPER_ADMIN
  VIEWER_ADMIN
}

enum paymentType {
  CASH
  CARD
}

enum statusType {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model Region {
  id        String   @id @default(uuid())
  name      String
  user      User[]
  createdAt DateTime @default(now())
}

model User {
  id           String     @id @default(uuid())
  name         String
  email        String     @unique
  password     String     @unique
  phoneNumber  String     @unique
  district     String
  soliqRaqami  String?
  bankKodi     String?
  hisobRaqami  String?
  bankNomi     String?
  faoliyatTuri String?
  bankAddress  String?
  otp          String?
  role         RoleStatus
  Region       Region?    @relation(fields: [regionId], references: [id])
  regionId     String?
  otpExpiresAt DateTime?
  refreshToken String?
  deviceInfo   String?
  isVerified   Boolean    @default(false)

  session     Session[]
  order       Order[]
  comment     Comment[]
  masterStar MasterStar[]

  createdAt DateTime @default(now())
}

model Session {
  id         String   @id @default(uuid())
  ipAddress  String
  deviceInfo String
  token      String   @unique
  userId     String
  User       User     @relation(fields: [userId], references: [id])
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}

model Brand {
  id    String      @id @default(uuid())
  name  String
  tools ToolBrand[]
}

model Size {
  id    String     @id @default(uuid())
  name  String
  tools ToolSize[]
}

model Capacity {
  id    String         @id @default(uuid())
  name  String
  tools ToolCapacity[]
}

model ToolBrand {
  id      String @id @default(uuid())
  tool    Tool   @relation(fields: [toolId], references: [id], onDelete: Cascade)
  toolId  String
  brand   Brand  @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId String
}

model ToolSize {
  id     String @id @default(uuid())
  tool   Tool   @relation(fields: [toolId], references: [id], onDelete: Cascade)
  toolId String
  size   Size   @relation(fields: [sizeId], references: [id], onDelete: Cascade)
  sizeId String
}

model ToolCapacity {
  id         String   @id @default(uuid())
  tool       Tool     @relation(fields: [toolId], references: [id], onDelete: Cascade)
  toolId     String
  capacity   Capacity @relation(fields: [capacityId], references: [id], onDelete: Cascade)
  capacityId String
}

model Tool {
  id         String  @id @default(uuid())
  name       String
  decription String
  price      Int
  quantity   Int
  code       String  @unique
  image      String
  isActive   Boolean @default(true)

  toolProduct ToolProduct[]
  orderTools  OrderTool[]

  ToolBrand    ToolBrand[]
  ToolSize     ToolSize[]
  ToolCapacity ToolCapacity[]

  createdAt DateTime @default(now())
}

model Level {
  id              String @id @default(uuid())
  name            String
  minWorkingHours Int
  priceHourly     Float
  priceDaily      Int

  productLevels ProductLevel[]
  masterLevels  MasterLevel[]

  createdAt DateTime @default(now())
}

model Product {
  id              String  @id @default(uuid())
  name            String
  image           String
  isActive        Boolean @default(true)
  minWorkingHours Int
  priceHourly     Float
  priceDaily      Int

  productLevels ProductLevel[]

  toolProduct   ToolProduct[]
  masterProduct MasterProduct[]
  orderProduct  OrderProduct[]

  createdAt DateTime @default(now())
}

model ProductLevel {
  id        String @id @default(uuid())
  productId String
  levelId   String

  product Product @relation(fields: [productId], references: [id])
  level   Level   @relation(fields: [levelId], references: [id])

  createdAt DateTime @default(now())

  @@unique([productId, levelId])
}

model Master {
  id              String   @id @default(uuid())
  name            String
  phone           String   @unique
  isActive        Boolean  @default(true)
  year            DateTime
  minWorkingHours Int
  priceHourly     Float
  priceDaily      Float
  experience      Int
  image           String
  passportImage   String
  star            Float    @default(0)
  about           String

  masterProduct MasterProduct[]
  masterStar    MasterStar[]
  masterLevels  MasterLevel[]

  createdAt DateTime @default(now())
}

model Order {
  id                String      @id @default(uuid())
  total             Float       @default(0)
  lat               Float
  long              Float
  address           String
  date              DateTime
  paymentType       paymentType
  withDelivery      Boolean
  status            statusType
  commentToDelivery String?

  userId String?
  User   User?   @relation(fields: [userId], references: [id])

  comment       Comment[]
  orderTools    OrderTool[]
  orderProducts OrderProduct[]

  createdAt DateTime @default(now())
}

model Comment {
  id      String @id @default(uuid())
  message String

  orderId String?
  Order   Order?  @relation(fields: [orderId], references: [id])
  userId  String?
  User    User?   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}

model ToolProduct {
  toolId    String
  productId String

  Tool    Tool    @relation(fields: [toolId], references: [id])
  Product Product @relation(fields: [productId], references: [id])

  @@id([toolId, productId])
}

model MasterLevel {
  id       String @id @default(uuid())
  masterId String
  levelId  String

  master Master @relation(fields: [masterId], references: [id], onDelete: Cascade)
  level  Level  @relation(fields: [levelId], references: [id], onDelete: Cascade)
}

model MasterProduct {
  masterId  String
  productId String
  Master    Master  @relation(fields: [masterId], references: [id], onDelete: Cascade)
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([masterId, productId])
}

model OrderTool {
  orderId String
  toolId  String
  count   Int
  Order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  Tool    Tool   @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@id([orderId, toolId])
}

model OrderProduct {
  orderId   String
  productId String
  count     Int
  quantity  Int
  measure   String
  Order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([orderId, productId])
}

model FAQ {
  id       String @id @default(uuid())
  question String
  answer   String

  createdAt DateTime @default(now())
}

model Contact {
  id      String @id @default(uuid())
  name    String
  surName String
  phone   String
  address String
  message String

  createdAt DateTime @default(now())
}

model GeneralInfo {
  id     String @id @default(uuid())
  email  String
  phones String
  links  String

  createdAt DateTime @default(now())
}

model Showcase {
  id          String @id @default(uuid())
  name        String
  description String
  image       String
  link        String

  createdAt DateTime @default(now())
}

model Partner {
  id    String @id @default(uuid())
  name  String
  image String

  createdAt DateTime @default(now())
}

model MasterStar {
  id        String   @id @default(uuid())
  star      Float
  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Master    Master?  @relation(fields: [masterId], references: [id])
  masterId  String?
}
